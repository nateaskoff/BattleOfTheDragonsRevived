name: Deploy BOTDR

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ROLE_NAME: ${{ secrets.AWS_ROLE_NAME }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  TF_TOKEN: ${{ secrets.TF_TOKEN }}
  TG_TF_REGISTRY_TOKEN: ${{ secrets.TF_TOKEN }}
  NW_MODULE_NAME: ${{ secrets.NW_MODULE_NAME }}
  DM_PW: ${{ secrets.NW_DM_PW }}
  ADMIN_PW: ${{ secrets.NW_ADMIN_PW }}

jobs:
  job-dev-tf-plan:
    runs-on: ubuntu-latest
    environment: DEV
    env:
      AWS_ENV: DEV
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
      TG_VERSION: ${{ vars.TG_VERSION }}
      NW_SERVER_NAME: 'Battle Of The Dragons Revived_TEST'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install curl wget zip unzip -y
      - name: Install Infracost
        run: curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin
          terraform --version
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version
      - name: Configure Terraform credentials
        run: |
          cat <<EOF >> ~/.terraformrc
          credentials "app.terraform.io" {
              token = "${ env.TF_TOKEN }"
          }
          EOF
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Run Infracost and Terragrunt plan
        working-directory: infra
        run: |
          infracost breakdown --path .
          terragrunt plan

  job-dev-tf-apply:
    runs-on: ubuntu-latest
    environment: DEV
    env:
      AWS_ENV: DEV
      NW_SERVER_NAME: 'Battle Of The Dragons Revived_TEST'
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
      TG_VERSION: ${{ vars.TG_VERSION }}
    needs: job-dev-tf-plan
    if: needs.job-dev-tf-plan.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install curl wget zip unzip -y
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin
          terraform --version
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version
      - name: Configure Terraform credentials
        run: |
          cat <<EOF >> ~/.terraformrc
          credentials "app.terraform.io" {
              token = "${ env.TF_TOKEN }"
          }
          EOF
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Run Terragrunt Apply
        working-directory: infra
        run: terragrunt apply --auto-approve

  job-dev-code-deploy:
    runs-on: ubuntu-latest
    environment: DEV
    needs: job-dev-tf-apply
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
    if: needs.job-dev-tf-apply.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install awscli -y
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Copy code to s3
        run: aws s3 cp ansible/ s3://dev-botdr-s3-code-bucket/Ansible/ --recursive

  job-prod-tf-plan:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      AWS_ENV: PROD
      NW_SERVER_NAME: 'Battle Of The Dragons Revived'
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
      TG_VERSION: ${{ vars.TG_VERSION }}
    needs: job-dev-code-deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install curl wget zip unzip -y
      - name: Install Infracost
        run: curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin
          terraform --version
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version
      - name: Configure Terraform credentials
        run: |
          cat <<EOF >> ~/.terraformrc
          credentials "app.terraform.io" {
              token = "${ env.TF_TOKEN }"
          }
          EOF
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Run Infracost and Terragrunt plan
        working-directory: infra
        run: |
          infracost breakdown --path .
          terragrunt plan

  job-prod-tf-apply:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      AWS_ENV: PROD
      NW_SERVER_NAME: 'Battle Of The Dragons Revived'
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
      TG_VERSION: ${{ vars.TG_VERSION }}
    needs: job-prod-tf-plan
    if: needs.job-prod-tf-plan.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install curl wget zip unzip -y
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin
          terraform --version
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version
      - name: Configure Terraform credentials
        run: |
          cat <<EOF >> ~/.terraformrc
          credentials "app.terraform.io" {
              token = "${ env.TF_TOKEN }"
          }
          EOF
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Run Terragrunt Apply
        working-directory: infra
        run: terragrunt apply --auto-approve

  job-prod-code-deploy:
    runs-on: ubuntu-latest
    environment: PROD
    needs: job-prod-tf-apply
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
    if: needs.job-prod-tf-apply.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install awscli -y
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Copy code to s3
        run: aws s3 cp ansible/ s3://prod-botdr-s3-code-bucket/Ansible/ --recursive

  job-dev-tf-destroy:
    runs-on: ubuntu-latest
    environment: DEV
    env:
      AWS_ENV: DEV
      NW_SERVER_NAME: 'Battle Of The Dragons Revived_TEST'
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VERSION: ${{ vars.TF_VERSION }}
      TG_VERSION: ${{ vars.TG_VERSION }}
    needs: job-prod-code-deploy
    if: needs.job-prod-code-deploy.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@2
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install curl wget zip unzip -y
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin
          terraform --version
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version
      - name: Configure Terraform credentials
        run: |
          cat <<EOF >> ~/.terraformrc
          credentials "app.terraform.io" {
              token = "${ env.TF_TOKEN }"
          }
          EOF
      - name: Configure AWS credentials
        run: |
          mkdir ~/.aws
          cat <<EOF >> ~/.aws/credentials
          [default]
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          EOF
          cat <<EOF >> ~/.aws/config
          [default]
          region=${AWS_REGION}
          EOF
      - name: Run Terragrunt Apply
        working-directory: infra
        run: terragrunt destroy --auto-approve
